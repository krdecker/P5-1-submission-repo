function getModel(){return localStorage.model?JSON.parse(localStorage.model):EatsModel}function buildWindowContent(e){var t="http://maps.googleapis.com/maps/api/streetview?size=200x150&location="+e.position.toString(),o='<img class="bgimg" src="'+t+'">',n='"height:100%;width:80%"',i='<div onclick="itchwindow()" style='+n+">"+o+'<br><span style="color:darkgreen">'+e.title+'</span><br><span style="color:red">-CLICK FOR MORE INFO-</span></div>';return i}function buildSlideContent(e){function t(t){var i=t.response.venues[0];$.ajax({url:fourSquareURL+"/v2/venues/"+i.id,dataType:"json",data:"limit=1&"+s+"&query="+e.name+"&client_id="+kr.foursquare.Client_id+"&client_secret="+kr.foursquare.Client_secret+"&v=20160130",async:!0,error:n}).success(function(e){o(e)})}function o(t){var o=t.response.venue;i="FourSquare info: <br><br>"+o.name+"<br>"+o.contact.formattedPhone+"<br>- "+o.location.address+"<br>- "+o.location.city+"<br>- "+o.location.country+"<br>x-street: "+o.location.crossStreet+"<br>Check-ins: "+o.stats.checkinsCount.toString()+"<br>"+o.likes.summary+'<br><br><span style="background-color:#'+o.ratingColor+';color:black;padding:1%">Rating: '+o.rating.toString()+'</span><br><img src="'+o.bestPhoto.prefix+"cap300"+o.bestPhoto.suffix+'">',e.slideContent=i}function n(t,o,n){var i="Sorry. 3rd party info unavailable.";e.slideContent=i+n}var i="",s="ll="+e.location.lat.toString()+","+e.location.lng.toString();$.ajax({url:fourSquareURL+"/v2/venues/search",dataType:"json",data:"limit=1&"+s+"&query="+e.name+"&client_id="+kr.foursquare.Client_id+"&client_secret="+kr.foursquare.Client_secret+"&v=20160130",async:!0,error:n}).success(function(e){t(e)})}function init(){map=new google.maps.Map(document.getElementById("map-div"),mapOptions),model=getModel(),(void 0==model.spots[0].slideContent||"Sorry"==model.spots[0].slideContent.slice(0,5))&&model.spots.forEach(function(e){e.slideContent="",buildSlideContent(e)}),viewModel.spotList(model.spots),infowindow=new google.maps.InfoWindow({}),map.setZoom(model.zoomLevel),map.setCenter(model.center),model.spots.forEach(function(e){eatingSpots.push(new Spot(e))}),google.maps.event.addDomListener(window,"resize",function(){map.setCenter(model.center)}),window.setTimeout(function(){localStorage.model=JSON.stringify(model)},3e3)}function filterList(e,t){var o=[],n=new RegExp(e,["i"]);return t.forEach(function(e,t,i){n.test(e.name)&&o.push(e)}),o}function getSpot(e){var t;return eatingSpots.forEach(function(o){o.name==e&&(t=o)}),t}function resetMarkers(e){eatingSpots.forEach(function(e){e.hideMarker()});for(var t in e)getSpot(e[t].name).showMarker()}function itchwindow(){viewModel.openAPIslide(infowindow.anchor.title)}function cleanUpScreen(){infowindow.close(),map.setZoom(model.zoomLevel),map.setCenter(model.center),viewModel.slideOff()}function dubSlideContents(){if(model.spots[0].slideContent)for(var e in model.spots)eatingSpots[e].slideContent=model.spots[e].slideContent,localStorage.model=JSON.stringify(model)}var EatsModel={zoomLevel:18,center:{lat:49.262387,lng:-123.069768},spots:[{name:"Uncle Fatih's Pizza",location:{lat:49.262487,lng:-123.07}},{name:"Buddha's Orient Express",location:{lat:49.262719,lng:-123.069289}},{name:"Booster Juice",location:{lat:49.262641,lng:-123.069438}},{name:"Starbucks Coffee",location:{lat:49.261874,lng:-123.070176}},{name:"Blenz Coffee",location:{lat:49.262534,lng:-123.069529}},{name:"Megabite Pizza",location:{lat:49.262779,lng:-123.069317}},{name:"Broadway Station Sushi",location:{lat:49.262084,lng:-123.070962}}]},model={},fourSquareURL="https://api.foursquare.com",map,eatingSpots=[],infowindow,RedRoadsNGreenBusStops=[{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road",stylers:[{gamma:.65},{hue:"#ff9c30"},{visibility:"on"},{saturation:99},{lightness:-12}]},{featureType:"transit",stylers:[{hue:"#00ff33"},{gamma:.6},{saturation:5},{visibility:"on"},{weight:4.6},{lightness:-12}]}],mapOptions={center:{lat:49.262387,lng:-123.069768},zoom:16,zoomControl:!0,scrollwheel:!1,draggable:!0,disableDoubleClickZoom:!0,disableDefaultUI:!0,styles:RedRoadsNGreenBusStops},Spot=function(e){var t=this;this.name=e.name,this.location=e.location,this.slideContent=e.slideContent,this.marker=new google.maps.Marker({position:this.location,title:this.name,map:map,opacity:.4}),this.windowContent=buildWindowContent(this.marker),this.clickEvent=google.maps.event.addListener(this.marker,"click",function(){t.doOpening()})};Spot.prototype.doOpening=function(){var e=this;cleanUpScreen(),this.marker.setAnimation(google.maps.Animation.BOUNCE),window.setTimeout(function(){e.openWindow(),e.marker.setAnimation(null)},1e3)},Spot.prototype.openWindow=function(){viewModel.listCollapse(),infowindow.setContent(this.windowContent),infowindow.open(map,this.marker)},Spot.prototype.hideMarker=function(){this.marker.setMap(null)},Spot.prototype.showMarker=function(){this.marker.setMap(map)};var ViewModel=function(){var e=this;e.listOn=ko.observable(!0),e.burgerMenu=ko.observable(!1),e.spotList=ko.observableArray(),e.slideOn=ko.observable(!1),e.slideContent=ko.observable(),e.filterSlot=ko.observable(),e.isSelected=ko.observable(!1),e.spotPick=function(){var e=getSpot(this.name);e.doOpening()},e.setFilterSelected=function(){this.isSelected(!0),cleanUpScreen(),e.listExpand()},e.filterSlot.subscribe(function(t){e.listExpand(),e.spotList(filterList(t,eatingSpots)),resetMarkers(e.spotList())}),e.onEnter=function(t,o){return 13===o.keyCode?infowindow.anchor?e.openAPIslide(infowindow.anchor.title):1===e.spotList().length&&e.spotList()[0].doOpening():(infowindow&&infowindow.close(),e.slideOff(),e.listExpand()),!0},e.listCollapse=function(){e.listOn(!1),e.burgerMenu(!0)},e.listExpand=function(){cleanUpScreen(),e.burgerMenu(!1),e.listOn(!0)},e.openAPIslide=function(e){var t=getSpot(e);t.slideContent||dubSlideContents(),viewModel.slideContent(t.slideContent),viewModel.slideOn(!0)},e.slideOff=function(){this.slideOn(!1)}},viewModel=new ViewModel;ko.applyBindings(viewModel);var kr={foursquare:{Owner:"KR Decker",Client_id:"ZVLKTKSGULFEQ3XMWWI3AL1A2KXYBEKD1LKSURUZDGZY41JX",Client_secret:"TMT203DHWOPR3R4RSM1HE4RMOKEWLGTT0FLMZMUZ1OJHMAK1"},yelp:{Consumer_Key:"XrxJOUgGNKq9ZuWhBX1LDw",Consumer_Secret:"zr2I76nT8l0O-trkupYE00B9BTA",Token:"-_F8aOxonR6q5SqvURwwgLIdU-qteS-B",Token_Secret:"GF7uRcPWCpzlHcRP3DiJWjvcXJE"}};
//# sourceMappingURL=data:application/json;base64,
