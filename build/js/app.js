"use strict";function getModel(){return localStorage.model?JSON.parse(localStorage.model):EatsModel}function buildWindowContent(e){var o="http://maps.googleapis.com/maps/api/streetview?size=300x250&location="+e.position.toString().slice(1,-1),t='<img class="bgimg" src="'+o+'">',n='"height:100%;width:80%"',i='<div onclick="itchwindow()" style='+n+">"+t+'<br><span style="color:darkgreen">'+e.title+'</span><br><span style="color:red">-CLICK FOR MORE INFO-</span></div>';return i}function buildSlideContent(e){function o(o,i){console.log("In getVenueInfo: status = "+i);var a=o.response.venues[0];$.ajax({url:fourSquareURL+"/v2/venues/"+a.id,dataType:"json",data:"limit=1&"+s+"&query="+e.name+"&client_id="+kr.foursquare.Client_id+"&client_secret="+kr.foursquare.Client_secret+"&v=20160130",async:!0,success:t,error:n})}function t(o){var t=o.response.venue;i="FourSquare info: <br><br>"+t.name+"<br>"+t.contact.formattedPhone+"<br>- "+t.location.address+"<br>- "+t.location.city+"<br>- "+t.location.country+"<br>x-street: "+t.location.crossStreet+"<br>Check-ins: "+t.stats.checkinsCount.toString()+"<br>"+t.likes.summary+'<br><br><span style="background-color:#'+t.ratingColor+';color:black;padding:1%">Rating: '+t.rating.toString()+'</span><br><img src="'+t.bestPhoto.prefix+"cap300"+t.bestPhoto.suffix+'">',updateSlideContent(e,i)}function n(o,t,n){var i="Sorry. 3rd party info unavailable.";updateSlideContent(e,i)}var i="",s="ll="+e.location.lat.toString()+","+e.location.lng.toString();$.ajax({url:fourSquareURL+"/v2/venues/search",dataType:"json",data:"limit=1&"+s+"&query="+e.name+"&client_id="+kr.foursquare.Client_id+"&client_secret="+kr.foursquare.Client_secret+"&v=20160130",async:!0,success:o,error:n})}function updateSlideContent(e,o){e.slideContent=o;var t=getSpot(e.name);t&&(console.log("in updateSlideContent: viewSpot "),t.slideContent=o)}function init(){map=new google.maps.Map(document.getElementById("map-div"),mapOptions),model=getModel(),(void 0===model.spots[0].slideContent||"Sorry"==model.spots[0].slideContent.slice(0,5))&&model.spots.forEach(function(e){buildSlideContent(e)}),viewModel.spotList(model.spots),infowindow=new google.maps.InfoWindow({}),map.setZoom(model.zoomLevel),map.setCenter(model.center),model.spots.forEach(function(e){vmSpots.push(new Spot(e))}),google.maps.event.addDomListener(window,"resize",function(){map.setCenter(model.center)}),window.setTimeout(function(){localStorage.model=JSON.stringify(model)},3e3)}function filterList(e,o){var t=[],n=new RegExp(e,["i"]);return o.forEach(function(e,o,i){n.test(e.name)&&t.push(e)}),t}function getSpot(e){for(var o=0;o<vmSpots.length;o++)if(vmSpots[o].name==e)return vmSpots[o]}function resetMarkers(e){vmSpots.forEach(function(e){e.hideMarker()}),e.forEach(function(e){getSpot(e.name).showMarker()})}function itchwindow(){viewModel.openAPIslide(infowindow.anchor.title)}function cleanUpScreen(){infowindow.close(),map.setZoom(model.zoomLevel),map.setCenter(model.center),viewModel.slideOff(),$("ul.spot-list li").removeClass("hilight under")}function dubSlideContents(){model.spots[0].slideContent&&model.spots.forEach(function(e,o){vmSpots[o].slideContent=e.slideContent,localStorage.model=JSON.stringify(model)})}var EatsModel={zoomLevel:18,center:{lat:49.262387,lng:-123.069956},spots:[{name:"Uncle Fatih's Pizza",location:{lat:49.262437,lng:-123.070215},category:"pizza"},{name:"Buddha's Orient Express",location:{lat:49.262719,lng:-123.069289},category:"asian"},{name:"Booster Juice",location:{lat:49.262641,lng:-123.069438},category:"juice"},{name:"Starbucks Coffee",location:{lat:49.261874,lng:-123.070076},category:"coffee"},{name:"Blenz Coffee",location:{lat:49.262534,lng:-123.069529},category:"coffee"},{name:"Megabite Pizza",location:{lat:49.262779,lng:-123.069317},category:"pizza"},{name:"Broadway Station Sushi",location:{lat:49.262084,lng:-123.070962},category:"asian"}]},model={},fourSquareURL="https://api.Xfoursquare.com",map,vmSpots=[],infowindow,RedRoadsNGreenBusStops=[{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road",stylers:[{gamma:.65},{hue:"#ff9c30"},{visibility:"on"},{saturation:99},{lightness:-12}]},{featureType:"transit",stylers:[{hue:"#00ff33"},{gamma:.6},{saturation:5},{visibility:"on"},{weight:4.6},{lightness:-12}]}],mapOptions={center:{lat:49.262387,lng:-123.069868},zoom:16,zoomControl:!0,scrollwheel:!1,draggable:!0,disableDoubleClickZoom:!0,disableDefaultUI:!0,styles:RedRoadsNGreenBusStops},icons={asian:{icon:"img/asian.png"},coffee:{icon:"img/coffee.png"},food:{icon:"img/food.png"},juice:{icon:"img/juice.png"},pizza:{icon:"img/pizza.png"}},Spot=function(e){var o=this;this.name=e.name,this.location=e.location,this.category=e.category,console.log(this.name+" : "+this.category),this.slideContent=e.slideContent,console.log(icons[this.category].icon),this.marker=new google.maps.Marker({position:this.location,title:this.name,icon:icons[this.category].icon,map:map,opacity:.4}),this.windowContent=buildWindowContent(this.marker),this.clickEvent=google.maps.event.addListener(this.marker,"click",function(){o.doOpening()}),this.overEvent=google.maps.event.addListener(this.marker,"mouseover",function(){o.hiLightListItem()}),this.outEvent=google.maps.event.addListener(this.marker,"mouseout",function(){o.loLightListItem()})};Spot.prototype.hiLightListItem=function(){var e=this;cleanUpScreen(),$("li:contains("+e.name+")").toggleClass("hilight under")},Spot.prototype.loLightListItem=function(){var e=this;$("li:contains("+e.name+")").toggleClass("hilight under")},Spot.prototype.doBounce=function(){cleanUpScreen(),this.marker.setAnimation(google.maps.Animation.BOUNCE)},Spot.prototype.stopBounce=function(){this.marker.setAnimation(null)},Spot.prototype.doOpening=function(){var e=this;cleanUpScreen(),this.marker.setAnimation(google.maps.Animation.BOUNCE),window.setTimeout(function(){e.openWindow(),e.marker.setAnimation(null)},1e3)},Spot.prototype.openWindow=function(){var e=this;viewModel.listCollapse(),infowindow.setContent(this.windowContent),infowindow.open(map,this.marker),this.closeEvent=google.maps.event.addListener(infowindow,"closeclick",function(){cleanUpScreen(),viewModel.listExpand(),console.log("Got closeclicked in "+e.name),google.maps.event.removeListener(e.closeEvent)})},Spot.prototype.hideMarker=function(){this.marker.setMap(null)},Spot.prototype.showMarker=function(){this.marker.setMap(map)};var ViewModel=function(){var e=this;e.listOn=ko.observable(!0),e.burgerMenu=ko.observable(!1),e.spotList=ko.observableArray(),e.slideOn=ko.observable(!1),e.slideContent=ko.observable(),e.filterSlot=ko.observable(),e.isSelected=ko.observable(!1),e.bounceMarker=function(){var e=getSpot(this.name);e.doBounce()},e.unbounceMarker=function(){var e=getSpot(this.name);e.stopBounce()},e.spotPick=function(){var e=getSpot(this.name);e.doOpening()},e.setFilterSelected=function(){this.isSelected(!0),cleanUpScreen(),e.listExpand()},e.filterSlot.subscribe(function(o){e.listExpand(),e.spotList(filterList(o,vmSpots)),resetMarkers(e.spotList())}),e.onEnter=function(o,t){return 13===t.keyCode?infowindow.anchor?e.openAPIslide(infowindow.anchor.title):1===e.spotList().length&&e.spotList()[0].doOpening():(infowindow&&infowindow.close(),e.slideOff(),e.listExpand()),!0},e.listCollapse=function(){var o=window.matchMedia("(max-width: 549px)");o.matches&&(e.listOn(!1),e.burgerMenu(!0))},e.listExpand=function(){cleanUpScreen(),e.burgerMenu(!1),e.listOn(!0)},e.openAPIslide=function(e){var o=getSpot(e);o.slideContent||dubSlideContents(),viewModel.slideContent(o.slideContent),viewModel.slideOn(!0)},e.slideOff=function(){this.slideOn(!1)}},viewModel=new ViewModel;ko.applyBindings(viewModel);var kr={foursquare:{Owner:"KR Decker",Client_id:"ZVLKTKSGULFEQ3XMWWI3AL1A2KXYBEKD1LKSURUZDGZY41JX",Client_secret:"TMT203DHWOPR3R4RSM1HE4RMOKEWLGTT0FLMZMUZ1OJHMAK1"},yelp:{Consumer_Key:"XrxJOUgGNKq9ZuWhBX1LDw",Consumer_Secret:"zr2I76nT8l0O-trkupYE00B9BTA",Token:"-_F8aOxonR6q5SqvURwwgLIdU-qteS-B",Token_Secret:"GF7uRcPWCpzlHcRP3DiJWjvcXJE"},streetview:{key:"AIzaSyAP631z6WqMoptoaGherhJVBGyN1uPHPt4"}};
//# sourceMappingURL=data:application/json;base64,
